===========================================
SMARTSTAY DATABASE STRUCTURE
===========================================

DATABASE: smart_stay
CHARACTER SET: utf8mb4
COLLATION: utf8mb4_unicode_ci
ENGINE: InnoDB

===========================================
TABLE RELATIONSHIPS
===========================================

1. HOTELS (Central Entity)
   - hotel_id (PK)
   |
   |-- Has Many --> ROOMS
   |-- Has Many --> EVENTS  
   |-- Has Many --> REVIEWS
   |-- Has Many --> SERVICES
   |-- Has Many --> STAFF

2. GUESTS
   - guest_id (PK)
   |
   |-- Has Many --> BOOKINGS
   |-- Has Many --> EVENT_BOOKINGS
   |-- Has Many --> REVIEWS

3. ROOMS
   - room_id (PK)
   - hotel_id (FK → HOTELS)
   - type_id (FK → ROOM_TYPES)
   |
   |-- Has Many --> BOOKINGS
   |-- Has Many --> MAINTENANCE_SCHEDULE

4. BOOKINGS
   - booking_id (PK)
   - guest_id (FK → GUESTS)
   - room_id (FK → ROOMS)
   |
   |-- Has Many --> PAYMENTS
   |-- Has Many --> SERVICE_BOOKINGS
   |-- Has One --> REVIEW (optional)

5. EVENTS
   - event_id (PK)
   - hotel_id (FK → HOTELS)
   |
   |-- Has Many --> EVENT_BOOKINGS

6. EVENT_BOOKINGS
   - event_booking_id (PK)
   - event_id (FK → EVENTS)
   - guest_id (FK → GUESTS)

===========================================
TABLE STRUCTURES
===========================================

TABLE: admins
-------------
admin_id (PK, AUTO_INCREMENT)
username (UNIQUE)
password (hashed)
email
full_name
role (ENUM: Super Admin, Admin, Manager)
last_login
created_at
is_active

TABLE: guests
-------------
guest_id (PK, AUTO_INCREMENT)
name
email (UNIQUE)
password (hashed)
phone
date_of_birth
gender (ENUM: Male, Female, Other)
nationality
address
loyalty_points (DEFAULT: 0)
membership_level (ENUM: Bronze, Silver, Gold, Platinum)
created_at
updated_at
is_active

TABLE: hotels
-------------
hotel_id (PK, AUTO_INCREMENT)
hotel_name
email (UNIQUE)
password (hashed)
description
address
city
state
country
postal_code
phone
star_rating (DECIMAL 2,1)
total_rooms (DEFAULT: 0)
amenities (JSON)
check_in_time (DEFAULT: 14:00:00)
check_out_time (DEFAULT: 11:00:00)
established_year
license_number
created_at
updated_at
is_active

TABLE: room_types
-----------------
type_id (PK, AUTO_INCREMENT)
type_name (UNIQUE)
description
max_occupancy (DEFAULT: 2)
amenities (JSON)
created_at

TABLE: rooms
------------
room_id (PK, AUTO_INCREMENT)
hotel_id (FK → hotels)
room_number
type_id (FK → room_types)
floor_number
price (DECIMAL 10,2)
area_sqft
max_occupancy (DEFAULT: 2)
amenities (JSON)
maintenance_status (ENUM: Available, Under Maintenance, Out of Service)
is_active
created_at
updated_at
UNIQUE KEY: (hotel_id, room_number)

TABLE: bookings
---------------
booking_id (PK, AUTO_INCREMENT)
guest_id (FK → guests)
room_id (FK → rooms)
check_in (DATE)
check_out (DATE)
adults (DEFAULT: 1)
children (DEFAULT: 0)
total_amount (DECIMAL 10,2)
discount_amount (DECIMAL 10,2, DEFAULT: 0.00)
tax_amount (DECIMAL 10,2, DEFAULT: 0.00)
final_amount (DECIMAL 10,2)
booking_status (ENUM: Confirmed, Cancelled, Completed, No-Show)
payment_status (ENUM: Pending, Paid, Partial, Refunded)
booking_source (ENUM: Website, Phone, Walk-in, Third-party)
special_requests (TEXT)
cancellation_reason (TEXT)
created_at
updated_at
CHECK: check_out > check_in

TABLE: events
-------------
event_id (PK, AUTO_INCREMENT)
hotel_id (FK → hotels)
event_name
description
event_date (DATE)
start_time (TIME)
end_time (TIME)
venue
max_participants
current_participants (DEFAULT: 0)
price (DECIMAL 10,2, DEFAULT: 0.00)
event_type (ENUM: Conference, Wedding, Meeting, Party, Workshop, Other)
event_status (ENUM: Upcoming, Active, Completed, Cancelled)
organizer_name
organizer_contact
requirements (TEXT)
created_at
updated_at
CHECK: end_time > start_time

TABLE: event_bookings
---------------------
event_booking_id (PK, AUTO_INCREMENT)
event_id (FK → events)
guest_id (FK → guests)
participants (DEFAULT: 1)
amount_paid (DECIMAL 10,2)
booking_status (ENUM: Confirmed, Cancelled, Attended, No-Show)
special_requirements (TEXT)
created_at
updated_at
UNIQUE KEY: (event_id, guest_id)

TABLE: reviews
--------------
review_id (PK, AUTO_INCREMENT)
hotel_id (FK → hotels)
guest_id (FK → guests)
booking_id (FK → bookings, NULLABLE)
rating (DECIMAL 2,1)
title
comment (TEXT)
service_rating (DECIMAL 2,1)
cleanliness_rating (DECIMAL 2,1)
location_rating (DECIMAL 2,1)
amenities_rating (DECIMAL 2,1)
is_approved (DEFAULT: 0)
admin_response (TEXT)
created_at
updated_at
CHECK: rating BETWEEN 1.0 AND 5.0

TABLE: services
---------------
service_id (PK, AUTO_INCREMENT)
hotel_id (FK → hotels)
service_name
description
price (DECIMAL 10,2)
service_type (ENUM: Spa, Restaurant, Room Service, Transport, Laundry, Other)
is_active
created_at
updated_at

TABLE: service_bookings
-----------------------
service_booking_id (PK, AUTO_INCREMENT)
booking_id (FK → bookings)
service_id (FK → services)
quantity (DEFAULT: 1)
unit_price (DECIMAL 10,2)
total_price (DECIMAL 10,2)
service_date (DATE)
service_time (TIME)
status (ENUM: Requested, Confirmed, Completed, Cancelled)
special_instructions (TEXT)
created_at
updated_at

TABLE: payments
---------------
payment_id (PK, AUTO_INCREMENT)
booking_id (FK → bookings)
payment_method (ENUM: Cash, Card, Online, Bank Transfer)
amount (DECIMAL 10,2)
transaction_id
payment_status (ENUM: Success, Failed, Pending, Refunded)
payment_date (DEFAULT: CURRENT_TIMESTAMP)
gateway_response (TEXT)

TABLE: staff
------------
staff_id (PK, AUTO_INCREMENT)
hotel_id (FK → hotels)
first_name
last_name
email (UNIQUE)
phone
position
department (ENUM: Front Desk, Housekeeping, Maintenance, Restaurant, Management, Other)
salary (DECIMAL 10,2)
hire_date
is_active
created_at
updated_at

TABLE: maintenance_schedule
---------------------------
schedule_id (PK, AUTO_INCREMENT)
room_id (FK → rooms)
maintenance_type
description (TEXT)
scheduled_date (DATE)
completed_date (DATE, NULLABLE)
assigned_to (FK → staff, NULLABLE)
priority (ENUM: Low, Medium, High, Critical)
status (ENUM: Scheduled, In Progress, Completed, Cancelled)
notes (TEXT)
created_at
updated_at

TABLE: system_logs
------------------
log_id (PK, AUTO_INCREMENT)
user_type (ENUM: Admin, Guest, Hotel, System)
user_id
action
table_name
record_id
old_values (JSON)
new_values (JSON)
ip_address
created_at

===========================================
STORED PROCEDURES
===========================================

1. CalculateLoyaltyPoints(booking_id)
   - Awards loyalty points based on final amount
   - Updates guest membership level
   - Rule: 1 point per $10 spent

2. CalculateRoomRevenue(hotel_id, start_date, end_date, OUT total_revenue)
   - Calculates total revenue for a hotel
   - Only counts completed/paid bookings

3. GenerateMonthlyHotelReport(hotel_id, year, month)
   - Comprehensive performance report
   - Returns: bookings, revenue, guests, ratings, events

4. GetAvailableRooms(hotel_id, check_in, check_out, room_type_id)
   - Finds available rooms for dates
   - Excludes booked and maintenance rooms

5. ProcessLoyaltyUpgrades()
   - Batch processes membership upgrades
   - Updates all guests based on points

6. ScheduleRoomMaintenance(hotel_id)
   - Auto-schedules maintenance for high-use rooms
   - Triggers: 20+ bookings/90 days OR 180+ days since last

7. UpdateRoomPrices(hotel_id, adjustment_percentage)
   - Bulk price update with seasonal multipliers
   - Factors: Season, percentage adjustment

8. UpdateRoomPricesBasedOnDemand(hotel_id)
   - Dynamic pricing based on occupancy
   - Adjustments: 90%=+15%, 70%=+10%, 50%=+5%, <30%=-10%

9. UpdateRoomPricesManual(hotel_id, percentage)
   - Simple percentage-based price update
   - Returns: rooms updated, min/max prices

===========================================
FUNCTIONS
===========================================

1. CalculateAge(date_of_birth) → INT
   - Returns age in years

2. CalculateDynamicPrice(base_price, check_in_date, room_type) → DECIMAL
   - Calculates price with factors:
     * Season (Peak/High/Low/Normal)
     * Advance booking period
     * Room type premium

3. CalculateGuestSatisfactionScore(hotel_id) → DECIMAL
   - Composite score (0-100)
   - Factors: rating (70%), reviews count (20%), response rate (10%)

4. GetSeason(date) → VARCHAR
   - Returns: Peak, High, Low, or Normal
   - Peak: Dec 15-Feb, Jun-Aug
   - High: Mar-May, Sep-Nov

===========================================
TRIGGERS
===========================================

1. calculate_loyalty_on_completion (AFTER UPDATE bookings)
   - Auto-awards loyalty points when booking completed

2. log_booking_changes (AFTER UPDATE bookings)
   - Logs modifications to system_logs

3. update_event_participants_insert (AFTER INSERT event_bookings)
   - Increments current_participants in events

4. update_event_participants_delete (AFTER DELETE event_bookings)
   - Decrements current_participants in events

5. update_event_participants_update (AFTER UPDATE event_bookings)
   - Adjusts participants on status change

6. validate_room_availability_insert (BEFORE INSERT bookings)
   - Prevents double-booking

7. validate_room_availability_update (BEFORE UPDATE bookings)
   - Validates availability on booking updates

8. update_hotel_total_rooms_insert (AFTER INSERT rooms)
   - Increments hotel total_rooms count

9. update_hotel_total_rooms_delete (AFTER DELETE rooms)
   - Decrements hotel total_rooms count

10. calculate_booking_amounts (BEFORE INSERT bookings)
    - Auto-calculates tax (18%) and final amount

===========================================
VIEWS
===========================================

1. vw_hotel_occupancy
   - Real-time occupancy statistics
   - Fields: occupied_rooms, occupancy_rate, check_ins/outs today

2. vw_guest_booking_history
   - Complete booking history with details
   - Joins: guests, bookings, rooms, hotels, room_types

3. vw_hotel_revenue_summary
   - Revenue analytics by hotel
   - Metrics: total/completed/cancelled bookings, revenue, ratings

4. vw_room_availability
   - Current room status
   - Shows: Available, Occupied, or Maintenance

5. vw_upcoming_events
   - Future events with participation stats
   - Calculates: fill rate, available spots

6. vw_maintenance_dashboard
   - Pending maintenance tasks
   - Sorted by: priority, scheduled date

7. vw_guest_loyalty_tiers
   - Statistics grouped by membership level
   - Metrics: guests, points, bookings, revenue per tier

===========================================
INDEXES
===========================================

Primary Indexes (Clustered):
- All PRIMARY KEY fields

Foreign Key Indexes (Auto-created):
- All foreign key relationships

Composite Indexes:
- idx_booking_date_status (check_in, check_out, booking_status)
- idx_guest_membership_active (membership_level, is_active)
- idx_room_hotel_status (hotel_id, maintenance_status, is_active)
- idx_event_date_status (event_date, event_status, hotel_id)
- idx_review_hotel_approved (hotel_id, is_approved, created_at)
- idx_payment_date_status (payment_date, payment_status)
- idx_service_booking_date (service_date, status)
- idx_staff_department_active (hotel_id, department, is_active)

Full-Text Indexes:
- ft_hotel_search (hotel_name, description, city)
- ft_room_type_search (type_name, description)
- ft_event_search (event_name, description, venue)
- ft_service_search (service_name, description)

===========================================
BUSINESS RULES
===========================================

Loyalty Program Tiers:
- Bronze: 0-499 points
- Silver: 500-1,999 points
- Gold: 2,000-4,999 points
- Platinum: 5,000+ points

Points Earning:
- 1 point per $10 spent
- Only on completed bookings

Pricing Multipliers:
- Peak Season: 1.30x
- High Season: 1.15x
- Normal Season: 1.00x
- Low Season: 0.85x

Booking Rules:
- Minimum 18% tax
- No overlapping room bookings
- Check-out must be after check-in

Maintenance Triggers:
- 20+ bookings in 90 days
- 180+ days since last maintenance

===========================================
SAMPLE DATA SUMMARY
===========================================

- 3 Admins (username: admin, manager, support)
- 9 Hotels (IDs: 1-9)
- 5 Room Types (Standard, Deluxe, Suite, Family, Executive)
- 90 Rooms (10 per hotel)
- 10 Guests (Various membership levels)
- 45 Events (5 per hotel)
- 11 Staff Members (Across different hotels)
- 10 Services
- 10 Reviews (Approved)

Default Passwords (All Hashed):
- Admins: admin123
- Hotels: hotel123
- Guests: guest123

===========================================
FILE STRUCTURE
===========================================

01_schema.sql        - Tables, relationships, constraints
02_procedures.sql    - Stored procedures
03_functions.sql     - Reusable functions
04_triggers.sql      - Automated triggers
05_views.sql         - Report views
06_indexes.sql       - Performance indexes
07_sample_data.sql   - Test data
README.md            - Complete documentation
database_structure.txt - This file

===========================================
INSTALLATION ORDER
===========================================

1. 01_schema.sql
2. 02_procedures.sql
3. 03_functions.sql
4. 04_triggers.sql
5. 05_views.sql
6. 06_indexes.sql
7. 07_sample_data.sql (optional)

===========================================
MAINTENANCE TASKS
===========================================

Daily:
- Monitor system_logs for errors
- Check booking conflicts

Weekly:
- ANALYZE TABLE bookings, rooms
- Review slow query log

Monthly:
- Run ProcessLoyaltyUpgrades()
- Run ScheduleRoomMaintenance() for all hotels
- OPTIMIZE TABLE on large tables
- Generate backup

Quarterly:
- Review and archive old logs
- Update statistics for all tables
- Performance audit

===========================================
CONTACT & SUPPORT
===========================================

For technical support:
- Review README.md for detailed documentation
- Check system_logs table for error tracking
- Use phpMyAdmin for database management
- Test queries before production deployment

Database Version: 2.0
Last Updated: 2025-01-15
===========================================
