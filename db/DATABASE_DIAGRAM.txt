# SmartStay Database - Visual Structure

```
╔═══════════════════════════════════════════════════════════════════════════════╗
║                        SMARTSTAY DATABASE ARCHITECTURE                         ║
║                              Version 2.0 - 2025                                ║
╚═══════════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────────────┐
│                          CORE AUTHENTICATION TABLES                          │
└─────────────────────────────────────────────────────────────────────────────┘

    ┌──────────┐         ┌──────────┐         ┌──────────┐
    │  ADMINS  │         │  HOTELS  │         │  GUESTS  │
    ├──────────┤         ├──────────┤         ├──────────┤
    │admin_id  │         │hotel_id  │         │guest_id  │
    │username  │         │email     │         │email     │
    │password  │         │password  │         │password  │
    │role      │         │city      │         │loyalty   │
    └──────────┘         └────┬─────┘         └────┬─────┘
                              │                     │
         ┌────────────────────┴───────┬─────────────┴──────────────┐
         │                            │                            │
         ▼                            ▼                            ▼

┌─────────────────────────────────────────────────────────────────────────────┐
│                           ROOM MANAGEMENT CHAIN                              │
└─────────────────────────────────────────────────────────────────────────────┘

    ┌──────────────┐
    │  ROOM_TYPES  │
    ├──────────────┤
    │type_id       │
    │type_name     │◄─────────────┐
    │max_occupancy │              │
    └──────────────┘              │
                                  │
                          ┌───────┴──────┐
                          │    ROOMS     │
                          ├──────────────┤
                          │room_id       │
                          │hotel_id (FK) │
                          │type_id (FK)  │
                          │price         │
                          │status        │
                          └───────┬──────┘
                                  │
                    ┌─────────────┴──────────────┐
                    │                            │
                    ▼                            ▼

┌─────────────────────────────────────────────────────────────────────────────┐
│                           BOOKING WORKFLOW                                   │
└─────────────────────────────────────────────────────────────────────────────┘

              ┌───────────────┐
              │   BOOKINGS    │
              ├───────────────┤
              │booking_id     │
              │guest_id (FK)  │
              │room_id (FK)   │
              │check_in       │
              │check_out      │
              │final_amount   │
              │status         │
              └───────┬───────┘
                      │
        ┌─────────────┼─────────────┐
        │             │             │
        ▼             ▼             ▼
┌──────────────┐ ┌─────────┐ ┌───────────────────┐
│   PAYMENTS   │ │ REVIEWS │ │ SERVICE_BOOKINGS  │
├──────────────┤ ├─────────┤ ├───────────────────┤
│payment_id    │ │review_id│ │service_booking_id │
│booking_id(FK)│ │hotel_id │ │booking_id (FK)    │
│amount        │ │guest_id │ │service_id (FK)    │
│method        │ │rating   │ │total_price        │
└──────────────┘ └─────────┘ └───────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│                           EVENT MANAGEMENT                                   │
└─────────────────────────────────────────────────────────────────────────────┘

              ┌───────────────┐
              │    EVENTS     │
              ├───────────────┤
              │event_id       │
              │hotel_id (FK)  │
              │event_name     │
              │event_date     │
              │max_participants│
              │price          │
              └───────┬───────┘
                      │
                      ▼
              ┌──────────────────┐
              │ EVENT_BOOKINGS   │
              ├──────────────────┤
              │event_booking_id  │
              │event_id (FK)     │
              │guest_id (FK)     │
              │participants      │
              └──────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│                       HOTEL OPERATIONS                                       │
└─────────────────────────────────────────────────────────────────────────────┘

    ┌─────────────┐    ┌──────────────┐    ┌─────────────────────┐
    │   STAFF     │    │  SERVICES    │    │ HOTEL_IMAGES        │
    ├─────────────┤    ├──────────────┤    ├─────────────────────┤
    │staff_id     │    │service_id    │    │image_id             │
    │hotel_id (FK)│    │hotel_id (FK) │    │hotel_id (FK)        │
    │position     │    │service_name  │    │room_id (FK)         │
    │department   │    │price         │    │image_path           │
    └──────┬──────┘    └──────────────┘    └─────────────────────┘
           │
           │ assigned_to
           ▼
    ┌──────────────────────┐
    │ MAINTENANCE_SCHEDULE │
    ├──────────────────────┤
    │schedule_id           │
    │room_id (FK)          │
    │assigned_to (FK)      │
    │scheduled_date        │
    │priority              │
    └──────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│                           AUDIT & LOGGING                                    │
└─────────────────────────────────────────────────────────────────────────────┘

              ┌─────────────────┐
              │  SYSTEM_LOGS    │
              ├─────────────────┤
              │log_id           │
              │user_type        │
              │action           │
              │old_values (JSON)│
              │new_values (JSON)│
              └─────────────────┘

═══════════════════════════════════════════════════════════════════════════════

                          STORED PROCEDURES WORKFLOW

┌─────────────────────────────────────────────────────────────────────────────┐
│                          BOOKING COMPLETION                                  │
└─────────────────────────────────────────────────────────────────────────────┘

    Guest Completes Stay
           │
           ▼
    [Trigger: calculate_loyalty_on_completion]
           │
           ▼
    CALL CalculateLoyaltyPoints(booking_id)
           │
           ├─→ Calculate points (1 per $10)
           ├─→ Add to guest loyalty_points
           ├─→ Update membership_level
           │    (Bronze → Silver → Gold → Platinum)
           └─→ Return

┌─────────────────────────────────────────────────────────────────────────────┐
│                       DYNAMIC PRICING WORKFLOW                               │
└─────────────────────────────────────────────────────────────────────────────┘

    Price Update Request
           │
           ├─→ Manual: UpdateRoomPricesManual(hotel_id, percentage)
           │        └─→ Simple % adjustment
           │
           ├─→ Seasonal: UpdateRoomPrices(hotel_id, percentage)
           │        └─→ Applies seasonal multiplier
           │
           └─→ Dynamic: UpdateRoomPricesBasedOnDemand(hotel_id)
                    │
                    ├─→ Calculate occupancy rate
                    ├─→ Apply dynamic adjustment:
                    │   • 90%+ = +15%
                    │   • 70%+ = +10%
                    │   • 50%+ = +5%
                    │   • <30% = -10%
                    └─→ Update room prices

┌─────────────────────────────────────────────────────────────────────────────┐
│                       MAINTENANCE AUTOMATION                                 │
└─────────────────────────────────────────────────────────────────────────────┘

    ScheduleRoomMaintenance(hotel_id)
           │
           ├─→ Find rooms with:
           │   • 20+ bookings in 90 days, OR
           │   • 180+ days since last maintenance
           │
           ├─→ Calculate priority:
           │   • High: 270+ days OR 30+ bookings
           │   • Medium: Standard thresholds
           │
           └─→ INSERT into maintenance_schedule

═══════════════════════════════════════════════════════════════════════════════

                              BUSINESS VIEWS

┌──────────────────────────┐  ┌──────────────────────────┐
│  vw_hotel_occupancy      │  │ vw_hotel_revenue_summary │
├──────────────────────────┤  ├──────────────────────────┤
│• Real-time occupancy %   │  │• Total revenue           │
│• Occupied rooms          │  │• Completed bookings      │
│• Check-ins today         │  │• Average booking value   │
│• Check-outs today        │  │• Unique guests           │
└──────────────────────────┘  └──────────────────────────┘

┌──────────────────────────┐  ┌──────────────────────────┐
│  vw_room_availability    │  │ vw_upcoming_events       │
├──────────────────────────┤  ├──────────────────────────┤
│• Current status          │  │• Future events           │
│• Available/Occupied      │  │• Fill rate %             │
│• Next available date     │  │• Available spots         │
│• Price per night         │  │• Total registrations     │
└──────────────────────────┘  └──────────────────────────┘

┌──────────────────────────┐  ┌──────────────────────────┐
│ vw_guest_booking_history │  │ vw_maintenance_dashboard │
├──────────────────────────┤  ├──────────────────────────┤
│• All past bookings       │  │• Pending maintenance     │
│• Hotel & room details    │  │• Priority sorted         │
│• Loyalty tier            │  │• Days overdue            │
│• Total spent             │  │• Assigned staff          │
└──────────────────────────┘  └──────────────────────────┘

┌──────────────────────────┐
│  vw_guest_loyalty_tiers  │
├──────────────────────────┤
│• Guests per tier         │
│• Average points          │
│• Total revenue per tier  │
│• Booking frequency       │
└──────────────────────────┘

═══════════════════════════════════════════════════════════════════════════════

                            TRIGGER FLOW

┌─────────────────────────────────────────────────────────────────────────────┐
│                         BOOKING LIFECYCLE                                    │
└─────────────────────────────────────────────────────────────────────────────┘

INSERT INTO bookings
    ↓
[BEFORE INSERT]
validate_room_availability_insert ──→ Check for conflicts
calculate_booking_amounts ──────────→ Calculate tax & final amount
    ↓
[BOOKING CREATED]
    ↓
UPDATE booking status = 'Completed'
    ↓
[AFTER UPDATE]
calculate_loyalty_on_completion ────→ Award loyalty points
log_booking_changes ────────────────→ Log to system_logs

┌─────────────────────────────────────────────────────────────────────────────┐
│                      EVENT PARTICIPANT TRACKING                              │
└─────────────────────────────────────────────────────────────────────────────┘

INSERT INTO event_bookings
    ↓
[AFTER INSERT]
update_event_participants_insert ──→ Increment current_participants

UPDATE event_bookings status = 'Cancelled'
    ↓
[AFTER UPDATE]
update_event_participants_update ──→ Decrement current_participants

DELETE FROM event_bookings
    ↓
[AFTER DELETE]
update_event_participants_delete ──→ Decrement current_participants

┌─────────────────────────────────────────────────────────────────────────────┐
│                         ROOM INVENTORY                                       │
└─────────────────────────────────────────────────────────────────────────────┘

INSERT INTO rooms
    ↓
[AFTER INSERT]
update_hotel_total_rooms_insert ───→ Increment hotel.total_rooms

DELETE FROM rooms
    ↓
[AFTER DELETE]
update_hotel_total_rooms_delete ───→ Decrement hotel.total_rooms

═══════════════════════════════════════════════════════════════════════════════

                      DATA FLOW EXAMPLE: ROOM BOOKING

┌─────────────────────────────────────────────────────────────────────────────┐

1. Guest searches for rooms
       ↓
   CALL GetAvailableRooms(hotel_id, check_in, check_out, room_type)
       ↓
   Returns: Available rooms list

2. Guest selects room and books
       ↓
   Calculate price: SELECT CalculateDynamicPrice(base_price, check_in, room_type)
       ↓
   INSERT INTO bookings (guest_id, room_id, ...)
       ↓
   [Triggers fire: validate_room_availability, calculate_booking_amounts]

3. Guest pays
       ↓
   INSERT INTO payments (booking_id, amount, method, ...)

4. Guest completes stay
       ↓
   UPDATE bookings SET status = 'Completed'
       ↓
   [Trigger: calculate_loyalty_on_completion]
       ↓
   CALL CalculateLoyaltyPoints(booking_id)
       ↓
   Guest loyalty points increased
   Membership tier updated if threshold reached

5. Guest leaves review
       ↓
   INSERT INTO reviews (hotel_id, guest_id, rating, ...)
       ↓
   Admin approves: UPDATE reviews SET is_approved = 1

6. Hotel satisfaction score updated
       ↓
   SELECT CalculateGuestSatisfactionScore(hotel_id)
       ↓
   Returns: 0-100 satisfaction score

└─────────────────────────────────────────────────────────────────────────────┘

═══════════════════════════════════════════════════════════════════════════════

                          LOYALTY PROGRAM FLOW

┌───────────────┐     ┌───────────────┐     ┌───────────────┐     ┌───────────────┐
│    BRONZE     │────→│    SILVER     │────→│     GOLD      │────→│   PLATINUM    │
│   0-499 pts   │     │  500-1999 pts │     │ 2000-4999 pts │     │   5000+ pts   │
└───────────────┘     └───────────────┘     └───────────────┘     └───────────────┘
        ↑                     ↑                     ↑                     ↑
        │                     │                     │                     │
        └─────────────────────┴─────────────────────┴─────────────────────┘
                      1 point per $10 spent on bookings
                   (Automatically calculated on completion)

═══════════════════════════════════════════════════════════════════════════════

                         FILE INSTALLATION ORDER

  ┌─────────────────────────────────────────────────────────────────────┐
  │  1. 01_schema.sql        ──→  Tables, Constraints, Foreign Keys     │
  │                              (Foundation - MUST be first)            │
  └─────────────────────────────────────────────────────────────────────┘
                                    ↓
  ┌─────────────────────────────────────────────────────────────────────┐
  │  2. 02_procedures.sql    ──→  Business Logic Procedures             │
  │                              (Requires tables to exist)              │
  └─────────────────────────────────────────────────────────────────────┘
                                    ↓
  ┌─────────────────────────────────────────────────────────────────────┐
  │  3. 03_functions.sql     ──→  Calculation Functions                 │
  │                              (Used by procedures and views)          │
  └─────────────────────────────────────────────────────────────────────┘
                                    ↓
  ┌─────────────────────────────────────────────────────────────────────┐
  │  4. 04_triggers.sql      ──→  Automated Triggers                    │
  │                              (Calls procedures, modifies tables)     │
  └─────────────────────────────────────────────────────────────────────┘
                                    ↓
  ┌─────────────────────────────────────────────────────────────────────┐
  │  5. 05_views.sql         ──→  Report Views                          │
  │                              (Queries tables and uses functions)     │
  └─────────────────────────────────────────────────────────────────────┘
                                    ↓
  ┌─────────────────────────────────────────────────────────────────────┐
  │  6. 06_indexes.sql       ──→  Performance Indexes                   │
  │                              (Optimizes existing tables)             │
  └─────────────────────────────────────────────────────────────────────┘
                                    ↓
  ┌─────────────────────────────────────────────────────────────────────┐
  │  7. 07_sample_data.sql   ──→  Test Data (Optional)                  │
  │                              (Populates tables with examples)        │
  └─────────────────────────────────────────────────────────────────────┘

═══════════════════════════════════════════════════════════════════════════════

Legend:
  ├──┤  Table
  (FK) Foreign Key
  ──→  Data Flow / Relationship
  [ ]  Trigger
  CALL Stored Procedure
  ↓    Sequential Flow

═══════════════════════════════════════════════════════════════════════════════
                        SmartStay Database v2.0
                     © 2025 - All Rights Reserved
═══════════════════════════════════════════════════════════════════════════════
```
